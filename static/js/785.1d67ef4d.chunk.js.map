{"version":3,"file":"static/js/785.1d67ef4d.chunk.js","mappings":"wNA8CA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAGd,oGAEIH,GAAW,GACXF,GAAS,GAHb,UAIiCM,EAAAA,EAAAA,IAC3BZ,EACAU,EAAWG,QANjB,OAIUC,EAJV,OAQIV,EAAgBU,GARpB,gDAUIR,GAAS,GAVb,yBAYIE,GAAW,GAZf,6EAHc,sBAmBd,OAnBc,mCAkBdO,GACO,kBAAML,EAAWM,KAAjB,CACR,GAAE,CAAChB,KAEF,2BACGK,IAAS,yBAAK,qCACdE,IAAW,yBAAK,qCACQ,IAAxBJ,EAAac,SAAgB,yBAAK,8BACV,IAAxBd,EAAac,QACZd,EAAae,KAAI,SAAAC,GAAM,OACrB,4BACE,yCAAeA,EAAOC,WACtB,0BAAOD,EAAOE,YAFNF,EAAOG,GADI,MAQ9B,C,uGC7CD,IACMC,EAAW,+BACXC,EACJ,6NACIC,EAAW,qC,uMCAjB,SAIeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,uFACkBC,EAAAA,EAAAA,IAAU,kCAAmC,CAC3Df,OAAQc,IAFZ,cACQE,EADR,yBAISA,EAAEC,KAAKC,SAJhB,2EAOeC,EAAgB,EAAhBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BV,EAAIK,GAAnC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,mBAAyC,CACvDT,OAAQc,IAFZ,cACQE,EADR,yBAISA,EAAEC,MAJX,2EAOeG,EAAa,EAAbA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BX,EAAIK,GAAhC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,4BAAkD,CAChET,OAAQc,IAFZ,cACQE,EADR,yBAISA,EAAEC,MAJX,2EAMelB,EAAgB,EAAhBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BU,EAAIK,GAAnC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,mCAAyD,CACvET,OAAQc,IAFZ,cACQE,EADR,yBAISA,EAAEC,KAAKC,SAJhB,2EAMeG,EAAiB,EAAjBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,EAAOR,GAAvC,uFACkBC,EAAAA,EAAAA,IAAA,6BACQO,EADR,sCAEd,CACEtB,OAAQc,IAJd,cACQE,EADR,yBAOSA,EAAEC,KAAKC,SAPhB,kEA/BAH,EAAAA,EAAAA,SAAAA,QAAyBL,EAAAA,GACzBK,EAAAA,EAAAA,SAAAA,QAAyB,CACvBQ,cAAeZ,EAAAA,GACfa,OAAQ,mB","sources":["components/Reviews/Reviews.js","utils/Global.js","utils/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'utils/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, SetError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getReviews() {\n      try {\n        setLoading(true);\n        SetError(false);\n        const fetchedReviews = await getMovieReviews(\n          movieId,\n          controller.signal\n        );\n        setMovieReviews(fetchedReviews);\n      } catch (error) {\n        SetError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getReviews();\n    return () => controller.abort;\n  }, [movieId]);\n  return (\n    <div>\n      {error && <div>Something went wrong, try again.</div>}\n      {loading && <div>Movies are loading, please wait.</div>}\n      {movieReviews.length === 0 && <div>There are no reviews yet.</div>}\n      {movieReviews.length !== 0 &&\n        movieReviews.map(review => (\n          <div key={review.id}>\n            <p>{`Author: ${review.author}`}</p>\n            <span>{review.content}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\nexport default Reviews;\n","const API_KEY = 'ad57a1cb54651b0ec3ddf406d1d39fd8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst AUTH_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDU3YTFjYjU0NjUxYjBlYzNkZGY0MDZkMWQzOWZkOCIsInN1YiI6IjY0MzY1ZGIyOTQ2MzE4MDEyNjM4YmFlNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0MaGaafY6aZaycjfml7ZFP5IeOK1GQtKuKpxIF3v51o';\nconst IMG_PATH = 'https://image.tmdb.org/t/p/original';\nexport { API_KEY, BASE_URL, AUTH_KEY, IMG_PATH };\n","import axios from 'axios';\nimport { BASE_URL, AUTH_KEY } from './Global';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers = {\n  Authorization: AUTH_KEY,\n  accept: 'application/json',\n};\nasync function getMovies(controllerSignal) {\n  const r = await axios.get('trending/all/day?language=en-US', {\n    signal: controllerSignal,\n  });\n  return r.data.results;\n}\n\nasync function getMovieDetails(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}?language=en-US`, {\n    signal: controllerSignal,\n  });\n  return r.data;\n}\n\nasync function getMovieCast(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}}/credits?language=en-US`, {\n    signal: controllerSignal,\n  });\n  return r.data;\n}\nasync function getMovieReviews(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}}/reviews?language=en-US&page=1`, {\n    signal: controllerSignal,\n  });\n  return r.data.results;\n}\nasync function getMoviesByQuery(query, controllerSignal) {\n  const r = await axios.get(\n    `search/movie?query=${query}&include_adult=true&language=en-US`,\n    {\n      signal: controllerSignal,\n    }\n  );\n  return r.data.results;\n}\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","error","SetError","loading","setLoading","useEffect","controller","AbortController","getMovieReviews","signal","fetchedReviews","getReviews","abort","length","map","review","author","content","id","BASE_URL","AUTH_KEY","IMG_PATH","getMovies","controllerSignal","axios","r","data","results","getMovieDetails","getMovieCast","getMoviesByQuery","query","Authorization","accept"],"sourceRoot":""}