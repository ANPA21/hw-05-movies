{"version":3,"file":"static/js/266.ccaeb39a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.js","pages/Home.js","utils/Global.js","utils/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, name, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {name || title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'utils/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, SetError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getTrending() {\n      try {\n        setLoading(true);\n        SetError(false);\n        const fetchedMovies = await getMovies(controller.signal);\n        setTrendingMovies(fetchedMovies);\n      } catch (error) {\n        SetError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrending();\n\n    return () => controller.abort;\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending movies</h1>\n      {error && <div>Something went wrong, try again.</div>}\n      {loading && <div>Movies are loading, please wait.</div>}\n      <MovieList movies={trendingMovies}></MovieList>\n    </main>\n  );\n};\nexport default Home;\n","const API_KEY = 'ad57a1cb54651b0ec3ddf406d1d39fd8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst AUTH_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDU3YTFjYjU0NjUxYjBlYzNkZGY0MDZkMWQzOWZkOCIsInN1YiI6IjY0MzY1ZGIyOTQ2MzE4MDEyNjM4YmFlNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0MaGaafY6aZaycjfml7ZFP5IeOK1GQtKuKpxIF3v51o';\nconst IMG_PATH = 'https://image.tmdb.org/t/p/original';\nexport { API_KEY, BASE_URL, AUTH_KEY, IMG_PATH };\n","import axios from 'axios';\nimport { BASE_URL, AUTH_KEY } from './Global';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.headers = {\n  Authorization: AUTH_KEY,\n  accept: 'application/json',\n};\nasync function getMovies(controllerSignal) {\n  const r = await axios.get('trending/all/day?language=en-US', {\n    signal: controllerSignal,\n  });\n  return r.data.results;\n}\n\nasync function getMovieDetails(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}?language=en-US`, {\n    signal: controllerSignal,\n  });\n  return r.data;\n}\n\nasync function getMovieCast(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}}/credits?language=en-US`, {\n    signal: controllerSignal,\n  });\n  return r.data;\n}\nasync function getMovieReviews(id, controllerSignal) {\n  const r = await axios.get(`/movie/${id}}/reviews?language=en-US&page=1`, {\n    signal: controllerSignal,\n  });\n  return r.data.results;\n}\nasync function getMoviesByQuery(query, controllerSignal) {\n  const r = await axios.get(\n    `search/movie?query=${query}&include_adult=true&language=en-US`,\n    {\n      signal: controllerSignal,\n    }\n  );\n  return r.data.results;\n}\nexport {\n  getMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\n"],"names":["MovieList","movies","location","useLocation","map","id","name","title","to","state","from","useState","trendingMovies","setTrendingMovies","error","SetError","loading","setLoading","useEffect","controller","AbortController","getMovies","signal","fetchedMovies","getTrending","abort","BASE_URL","AUTH_KEY","IMG_PATH","controllerSignal","axios","r","data","results","getMovieDetails","getMovieCast","getMovieReviews","getMoviesByQuery","query","Authorization","accept"],"sourceRoot":""}